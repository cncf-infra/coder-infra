---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRQ3pSaXloTm1VTTNYNERaOExSMzN5akFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TVRFeE56SXlOVFV3T1ZvWApEVEkxTVRFeE5qSXlOVFV3T1Zvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTW9nZ2VuU08zd0JWd2pjZmNTYTZDVHMKdkNiM2plYWZGWXhnMGdYWmF3NHJJd1E1dURZMHpCWjZ5SjllcVNJRGVteFdUTnM3T2dCSzg0NWx1WU95dHFrZwp5YUhzMldRVEVnUnZXakc5dTdmOGIvNHJreG5oZEU0Q2RiVHQrSk9tQytIYVExN3FvOFdyM200eTluaXlOZFlMCkhtTW1iQWpHV3dsTUtoNTZPc0NpVlNIdFBZWEpxMnNhWVo3MnlOOUdFYXU3alhsZWlzTStpekV2YWVXeTkrRVEKeEt4dTI3K1pnR2djRHE4RnhJdDk5SVA5T1pqV2dCeG1Ba1d2T2s1L2N0bTJHc2wxc2k0cm5Fa3B1d0VaTkYraQoxK0xnblRiSkRqZ3VVTHFqRVpJR2F1R2dlcWpvdGd3ZjIvRjE2RFRzcE9udGpjdmpqM2tLU2ZRRnNqNkRWc0VDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRMaE12NEZxWHgrZi9FRWE5cwpXOStoaEJoaG16QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFmcjRNYXlZQnZFVFpBVld3NXUvc2JrbmNwSlQ3Ckpnd0ZpTkNYM3h4dXR0Sldtbk5hQk90ZkJTQVpLMG1VKzNEUE00VXhaRnA1TWNKMzFycDJodXZZc0syOUk1ZjIKRXpFbXZuaHBaSnhxT3Nvd0wxcnJpWTRqMkt1Rm9kbWd6b2psM3FhSXd3Q3Z3MnpMTjJkUW5sVmlMeEtScTdYWApKSVJwT3RuSEMxanloRXNPZmJUTFM4QllFNmdCTy9CUEFnVDFVWnowb3BkV2xzbUlUVU16TXFtRndxOGlDQmp2CjlIZlN6WVNINDJ2MDNDKzBvWi9WRTFFYlc3L3A2cnJSdzFaRy9MS1JBWXlPMFJ2Qzd1cUFxd3hjOTNuRkRTWVoKN0lLSGcvMzRSR0ZHcDAzU0FKZSt6OEVHZjRHdTV1WDNaeWlsMXpDUjJsMUlVdmNYWlA4enE4TjFDZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeWlDQjZkSTdmQUZYQ054OXhKcm9KT3k4SnZlTjVwOFZqR0RTQmRsckRpc2pCRG00Ck5qVE1GbnJJbjE2cElnTjZiRlpNMnpzNkFFcnpqbVc1ZzdLMnFTREpvZXpaWkJNU0JHOWFNYjI3dC94di9pdVQKR2VGMFRnSjF0TzM0azZZTDRkcERYdXFqeGF2ZWJqTDJlTEkxMWdzZVl5WnNDTVpiQ1V3cUhubzZ3S0pWSWUwOQpoY21yYXhwaG52YkkzMFlScTd1TmVWNkt3ejZMTVM5cDViTDM0UkRFckc3YnY1bUFhQndPcndYRWkzMzBnLzA1Cm1OYUFIR1lDUmE4NlRuOXkyYllheVhXeUxpdWNTU203QVJrMFg2TFg0dUNkTnNrT09DNVF1cU1Sa2dacTRhQjYKcU9pMkRCL2I4WFhvTk95azZlMk55K09QZVFwSjlBV3lQb05Xd1FJREFRQUJBb0lCQUhaRDh2K20zTnMveFhjUAozQjdQTElsK1l0RENCQ3N1WmVOUE8xUGsxUGpqVUlmR1pmeUJnL0NiUXd2TXpWVnpoNHdnS3JRVHdXb3VjTGVlCjJaOHZVQ1ZCWS9qMHBuWWhtbWN4NkNvMmc4R3hXSzMxUFFybG1iR1RTdC9rWlkrdWxrRTkvakZwUlE0QjlCR3kKaS9ndS9jVVJtR1FYTlJzbFJGcjZUNktwamZycmRqWmY4T1hRZzU0SytmQTZSbGdwQi9QR2pQZmxqYWFoZFk4bQpTWTZwV1p0bC9NazVqWFltWGZDaFpqd280QmdqVWNXaGJ4NlVRZFNhN1A1aHU0cm1MZXp5SmVpVXZIR0p0OUJGClNpdlY5cnBqK2NMYUNrb3k2VDBGUXNWNEFsUjdjZEwrTS9Venc2WGcxQVMvT1M2b2NZcnMzbDFkdTVOSWF0bjQKYkg3SVNBRUNnWUVBMkxxejVXemsxdU1sRGcyMUo2QzY3YVEvV1l4SGd5RmhIM283Tzh2anBCTGhHY2hXZThsRgp1QVJzdlJ0b29IM1JpdTdRdmtIVy9Oa1BBajJsVzZyWm9jcFNsb3RFNVJObzhjek5FZnh4NHJRTk5maXRONXloCkFiZ2pXVFVWK3MrdVpTRzNXbG1mVEEvNUVHcnVyTWJmU2IvaEJNdVMvYlVNYm14MjZjaXBKU0VDZ1lFQTdzQjAKZ3g2UElIWDRFN3g5TkFIKzhWMnUyeFFGYjB2OWR1MG1yRXh5eURlcnF0ZkUybEtyN3N2NEh6Y2tuM3lsazZZYwpDbFBXZXA1VVZSYkdRVTZmazJFVGttREJRNkVmSWpiWDcvTk83SjUrcHdsYVFkdGpCMk1ERThHcm84NjhjUTdCCk1uSWpQQkhIWGtFeUlGTnVPVzE4MjV2eVBtbzV0dEp0aUg3bVhhRUNnWUVBckdWZklobExzczgrTTM2ZDRpYk4KYXFrakp6VVowV29rMnFnZEpBU2NVSEFnRktVeWZnYnRhV0pEcU8xN2ZXWjMzeDcyZHREaWxZQ0htczIwa2tWRwpGcGRjdUptUnRQS0tvUVM2L3hxaThLVXVlUWNWcWszeUdPOERWenVOLzFOaU10bnVBbldWN0Nnc2cyMjc2ejNLCmNkeXF2bWk4eFFsV0dTUTROdURDQTJFQ2dZRUFtQkVBcE5yNzhvTHc1VEV5MWNOSHJGZ3RIT0Nkcll2Sy9zcUIKelZCTDgzWng0cmpYYXU4cEQwbmUyWkwzd3BWVHFMMHVNdTIvT0E1TVRIM2EvSkdsVmV1STJiekNtOTZ0dzg4RwpycEJiL3AzY3NXdGxqM2k2bEdQZCsrRm8vMGFZQTdLUUh4OVBqZDBORE4yZG5iVkdDVkhSS3RjaTdkb2V0SEZHCnpwOTAvc0VDZ1lBaU1qRk82QUhJejN3NVBwTkNhVUNzbGtNNnBpZUlPcnptajdQcDlmSDVpOGN3QmlaZVZ3ZjcKdUEzdEQ1d3k0THZYYkVsZDFZenF4MnRHa2UyVFdITnNuQXJ4Y25qL0sxdW1palZ4NXdZNmRpcVV3ZmlEdFNxMwpaWDlUKzlRZVNNbDdjTDRDbmJraGZnd1hCbjFUK3M4SXZib1lHTEFrbEx4UFhvR2V4OFJkdmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRQ3pSaXloTm1VTTNYNERaOExSMzN5akFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TVRFeE56SXlOVFV3T1ZvWApEVEkxTVRFeE5qSXlOVFV3T1Zvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTW9nZ2VuU08zd0JWd2pjZmNTYTZDVHMKdkNiM2plYWZGWXhnMGdYWmF3NHJJd1E1dURZMHpCWjZ5SjllcVNJRGVteFdUTnM3T2dCSzg0NWx1WU95dHFrZwp5YUhzMldRVEVnUnZXakc5dTdmOGIvNHJreG5oZEU0Q2RiVHQrSk9tQytIYVExN3FvOFdyM200eTluaXlOZFlMCkhtTW1iQWpHV3dsTUtoNTZPc0NpVlNIdFBZWEpxMnNhWVo3MnlOOUdFYXU3alhsZWlzTStpekV2YWVXeTkrRVEKeEt4dTI3K1pnR2djRHE4RnhJdDk5SVA5T1pqV2dCeG1Ba1d2T2s1L2N0bTJHc2wxc2k0cm5Fa3B1d0VaTkYraQoxK0xnblRiSkRqZ3VVTHFqRVpJR2F1R2dlcWpvdGd3ZjIvRjE2RFRzcE9udGpjdmpqM2tLU2ZRRnNqNkRWc0VDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRMaE12NEZxWHgrZi9FRWE5cwpXOStoaEJoaG16QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFmcjRNYXlZQnZFVFpBVld3NXUvc2JrbmNwSlQ3Ckpnd0ZpTkNYM3h4dXR0Sldtbk5hQk90ZkJTQVpLMG1VKzNEUE00VXhaRnA1TWNKMzFycDJodXZZc0syOUk1ZjIKRXpFbXZuaHBaSnhxT3Nvd0wxcnJpWTRqMkt1Rm9kbWd6b2psM3FhSXd3Q3Z3MnpMTjJkUW5sVmlMeEtScTdYWApKSVJwT3RuSEMxanloRXNPZmJUTFM4QllFNmdCTy9CUEFnVDFVWnowb3BkV2xzbUlUVU16TXFtRndxOGlDQmp2CjlIZlN6WVNINDJ2MDNDKzBvWi9WRTFFYlc3L3A2cnJSdzFaRy9MS1JBWXlPMFJ2Qzd1cUFxd3hjOTNuRkRTWVoKN0lLSGcvMzRSR0ZHcDAzU0FKZSt6OEVHZjRHdTV1WDNaeWlsMXpDUjJsMUlVdmNYWlA4enE4TjFDZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQUs4TWNObkMvOFpXZzllN2t1WVVBMHd3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpFeE1UY3lNalUxTURsYQpGdzB5TlRFeE1UWXlNalUxTURsYU1Db3hLREFtQmdOVkJBTU1IeW91WkdWbVlYVnNkQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEdXNDNysKUjFhOVk2UVFIYVc3VGcrNnVoUGtTZjg3M3VxcGFKR2JBYkwrUFZtR1FJVzc2SUtOekdWLzJyV1FPckJES253OApHVGhqTWlQWmFvdnBuYzB6QjE0MUppSFdYOHhMNnhaR09LbDBCYThoVW5lVnF6NTJWa09HaU9YdEd3OWp2WExHCnBGbnVwNnJBcGhJQTVVV1FtUTNqNEFad0Y2QkRZZ2FzdVU1ZWtFREhMZUQwd01FR3J2RjcvM3JVZkVpRXNqK1oKa1ZkajRFQktWZEZjTkozUWRyOGxBQUEyUmNGM0FXN05ZeWFtOEFxWHVmRkVKQi9sY09Idmc3QjZNNzEzR2Q1WQpXWTU5eXB3YWV6bndrK0xRSWpLQ2lEN0o4bHVNK21XTGVsb2I4amtxeXRtUWErQm53UjQ5WWFZK29hdHVxM0M1CktlLy9nMHVTbjE5ZzRDMlZBZ01CQUFHamdZMHdnWW93RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVcKTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQQpGTXVFeS9nV3BmSDUvOFFScjJ4YjM2R0VHR0diTUNvR0ExVWRFUVFqTUNHQ0h5b3VaR1ZtWVhWc2RDNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGRE1uZ0JQSGNweFN5MTQKeHlJVUpuK1phakJjaGlJZ3AxaTRHNEUyUzRtTHQzUTdZR0s1cERWb3RYSUFGY0QvaVRhZ1F3MDluYXlYZ3B5LwpuQW1nS3RHYTc1UlYwYTA2NDdpbjcvdHlVZk5NUFRYTk1ucUFzbUtKaE5NVllYd2xKYWcwZEljNENyT0F2eFVxCkYwVExGejFYb3dDY0N5Z0MzUUQwa3Q5dnIwdWJHS010SzdCL0NGTWVzbGE2MlZqb2ladmVJdlY0dUFMUTg0QkEKM3VYcHJnWDRsaWpwL0RTQ01RVWZ0Uk51U2cvNTdyRnVobHhELzYvZ0lBNEtNUXM2NkNZL3hzT0R2NjZ6blBhbApXSzVPdUxVckpBTTRqb1FMNTVYSmpWcW92T2V4SUhMY29WY016Y1FuNWlZL3Q3VjFlaytnUU5lMUhOV3U4Z1pRCnBwTFI5Rlk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBN3JBdS9rZFd2V09rRUIybHUwNFB1cm9UNUVuL085N3FxV2lSbXdHeS9qMVpoa0NGCnUraUNqY3hsZjlxMWtEcXdReXA4UEJrNFl6SWoyV3FMNlozTk13ZGVOU1loMWwvTVMrc1dSamlwZEFXdklWSjMKbGFzK2RsWkRob2psN1JzUFk3MXl4cVJaN3FlcXdLWVNBT1ZGa0prTjQrQUdjQmVnUTJJR3JMbE9YcEJBeHkzZwo5TURCQnE3eGUvOTYxSHhJaExJL21aRlhZK0JBU2xYUlhEU2QwSGEvSlFBQU5rWEJkd0Z1eldNbXB2QUtsN254ClJDUWY1WERoNzRPd2VqTzlkeG5lV0ZtT2ZjcWNHbnM1OEpQaTBDSXlnb2creWZKYmpQcGxpM3BhRy9JNUtzcloKa0d2Z1o4RWVQV0dtUHFHcmJxdHd1U252LzROTGtwOWZZT0F0bFFJREFRQUJBb0lCQVFDb0ZXdlNadHhmWERhaApucThoK3JPNjgrU2tJN1BZTG4ranN0NnVnSURTNXRNUFpvcUdyQktiMW04M25RVzB2bzkzalFpVnJkRDJrYzJMCkFxdnFaTlNtOWE1UzBUcU00ME5UeHdZVmh6dFZWOWRmS05yTGpCN2RhSnYrdHBMcjZOMXFpSE8yRFBERHpsREIKZjNFNExqeFJ1bVo4clRyN1hyZmVHNzdGald6eHkxbG9sMnJSWW5YOVllUVlsVXVNSzE5OGRtRk01UUY5eGxQOQozdG00VGw2WkdZNUgwb3djY05ZQjYzZFdpWlRhV0xMUWo5YXBrb1B3c3BUUG5iaEtENHg2dGM0b0p3WUJyZTFTClhaZ2grZ1Z4QWkwNlJzRm4zQWxJQWdwM0V4MHBURFFKQ05xQVBhQ1RmNERSYlBsNjNJQWhYd21INnNML2ZYYjkKVDNhUjUzSkJBb0dCQVAvQUNtMFV5NlIyYzFKMCtNL2hCTFhmcHBsRk1PVHFLc1hHaU84ZFlwQkJGd0ZwdmZPMApXUDhKRE44UExSb1lheEorUll6S3Vlcjc4Z2tpMDJBak01SjBFNVgrNDV6aDE0bTFreWxxdHQ4a0g4bXlqY1UzCmJDSUhhY2ozNk80T3F1VzdISVFaeUlnUGx6OVROY0JqKy84VEVOSkJ4bEtITGFuU2p0MG9OZUZsQW9HQkFPN3IKNER0UmtkdGI4L2ZFRDNXRkNhVGxNUjJUNGZ2OHExTERqWSszVkN0d2JwSmM1S3UrM1ZTdGdUaWE0MkttK1IzMwpxSjNITklPc1Fsa3ZHYzZ2YnBWeVJoWEZwZ2tVaVVwVzlNdzJ3RVIxOTQ3ajNyM2FSYjFzZndUNTNrcU5HMzlGCjM3R1dic3lldmtZUHp4L3FZT3NMbDg2bDN4WWgrMDA3VW5KV2xmQnhBb0dCQUxOWmNqWlMyZ2lJaEpEenRMVGIKUVJsbU1RZlZMTmVybTdrOFpEVURiMlpvTHdEdnJhVGsrWEJJWVgxZndDcEhxM2E1bEg2S2dGell1RUJONnR2RgpjOW9saXNLcWorWXB2cVEwOEhHZ0E0UnlhZFJoWWVoRzJJNzRrZWU4YXQzZTdWdlRuc2pJNkFiNm4vOXBsQTFLClVLTHROT090K3ExUFhPZDE0SGdaUmNlOUFvR0FZWFE5Sm5VRE5hS3dST1BvR2x1RnI0ajlHNzl5Y2tLQjcyUnMKbmE1OTJxb2xyL1hNSUhIZC9lZzN5VXNFYlAwR3FENll2S0xBdk9US3UyNEc3Tk9LRzlOYzJ3eWZ5UnhqVTd0YwpadC8rVk81NWFBTnltNllveERjNUtHSnpWWjF4RmR6K2ZZV0s5RlBiOE9BSjhFNjk4YUhzN2hHaWlYaWE5TW01CnU0R3Q3MEVDZ1lFQWdoV2FBYWhDSzRqcmszS2RlSHJHODh5bTZ4OUlYSTlrSmFaNVJGSmdrR2ZWQUJVcUV3U3IKeTdkWWJaR3Mwb3hDRjRFajdlUDhPWXdRUzgzUDZOdm9ZZWtzbFc3aW81aXpLNVNaN2xVRVQrTkFWdGNZNm1OOQplOHNQMitibzZSTnlNSkgxcnhvTXZzRDNEY2JMelcxQW1yWFM3QVFsZWl3TjhUc3ZTZ1kwemxvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "disabled"
  enable-host-reachable-services: "true"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  annotate-k8s-node: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  # To annotate the k8s node with Cilium's metadata
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumnodes
  - ciliumnodes/status
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.6@sha256:f7f93c26739b6641a3fa3d76b1e1605b15989f25d06625260099e01c8243f54c"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.6@sha256:f7f93c26739b6641a3fa3d76b1e1605b15989f25d06625260099e01c8243f54c"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: wait-for-node-init
        image: "quay.io/cilium/cilium:v1.11.6@sha256:f7f93c26739b6641a3fa3d76b1e1605b15989f25d06625260099e01c8243f54c"
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          until test -s "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"; do
            echo "Waiting on node-init to run...";
            sleep 1;
          done
        volumeMounts:
        - name: cilium-bootstrap-file-dir
          mountPath: "/tmp/cilium-bootstrap.d"
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.6@sha256:f7f93c26739b6641a3fa3d76b1e1605b15989f25d06625260099e01c8243f54c"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: cilium-bootstrap-file-dir
        hostPath:
          path: "/tmp/cilium-bootstrap.d"
          type: DirectoryOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-nodeinit/daemonset.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cilium-node-init
  namespace: kube-system
  labels:
    app: cilium-node-init
spec:
  selector:
    matchLabels:
      app: cilium-node-init
  template:
    metadata:
      annotations:
      labels:
        app: cilium-node-init
    spec:
      tolerations:
        - operator: Exists
      hostPID: true
      hostNetwork: true
      priorityClassName: system-node-critical
      volumes:
      # To access iptables concurrently with other processes (e.g. kube-proxy)
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      containers:
        - name: node-init
          image: "quay.io/cilium/startup-script:62bfbe88c17778aad7bef9fa57ff9e2d4a9ba0d8"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          volumeMounts:
            # To access iptables concurrently with other processes (e.g. kube-proxy)
            - mountPath: /run/xtables.lock
              name: xtables-lock
          lifecycle:
          env:
          # STARTUP_SCRIPT is the script run on node bootstrap. Node
          # bootstrapping can be customized in this script. This script is invoked
          # using nsenter, so it runs in the host's network and mount namespace using
          # the host's userland tools!
          - name: STARTUP_SCRIPT
            value: |
              #!/bin/bash
              
              set -o errexit
              set -o pipefail
              set -o nounset
              
              echo "Link information:"
              ip link
              
              echo "Routing table:"
              ip route
              
              echo "Addressing:"
              ip -4 a
              ip -6 a
              mkdir -p "/tmp/cilium-bootstrap.d"
              date > "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"
              echo "Node initialization complete"
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.6@sha256:9f6063c7bcaede801a39315ec7c166309f6a6783e98665f6693939cf1701bc17
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
