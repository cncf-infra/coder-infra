---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRZEozVVdMbHdZMXZIaUlXMjNPMW1XekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TVRFeU1qQXhORFF6T0ZvWApEVEkxTVRFeU1UQXhORFF6T0Zvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEovUVpoMHFjVjlINkhWa0ZVWEJ5U0YKUGpwUis2N0Z3bVhtWXAxOFJkTGhZa2tpYUJROFlObEthY050WlRITE9oMWt6T3haMmRjTUNHeWdLWWYvOVdrMgpkY1pwTTF0Z2ttbTJ6dHRMcXhlOVhFVGlRaW9acHE4czNSL0R0azVlbWpTbUNuM3JmMkE3UkxTVnN6eXdLWTF5ClJhanpMcEYydWVYb1FyT1gwdlpFdHhVRFVkL2czRzJUc1dISW5rUjJ5VzdERk1vZEhFVDluSWFqRnJnMjk1VW4KVVVoU2crVG9CQTh0aDJ3UEYvZDIxUWo5T3d2TlZ2cjBaTHVEVDNzVmZIRnlYOU5zQnlERkZrVS80elBkVkVSZgpCTDVGRGNuYlVybHQ4ZWlmN2Y5WlIrVnA4cnNqdWNieG1LTUIvSkdRRGNOMjhOQ0M1bTVCM0duTG9IUHpZZEVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNQa2VkdGdyT0xPMG5tUjhDQgpKNjB2eDFYRXd6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFMb1BsWjNEbFZQeGx1Z0dvUnJFbXp5UitQL24rCkFKV2czdFdLOHExZWxCQ1lja3ZKMlJ5dHFXdmVqbjBxK1dHV3BROTRYVE9jbWFaQXE0dEtQVFhKT3F0dWMzd2QKeWFaWndxeXdsaTFUTHF1MkcvTENUS2Z1Rk5rZjZtaUJUSTBLY04xZ3BKeUV0ZlpxdktMWGIyNWVBTHYyVnVCSwphbFBIbDhvMDBNVHA3S2xVK29GUVpvUE04VmpYYU9NQkRUL2tmRlI5MTE1dVB3cGR3Uk8rL0hRU1NhVUdZTkMzCjIybWlMa0h3REhONzRCcCtkWmpVekRHeEdYb3JFMGdMNTNic0FWMTZ2akk5NG9meGhiNXZqamtraHlWOThnMDQKNGNjU0FUNVl6MnVMaWZOMVFVMjduL2ZpdHozU0orQW5sRUN5L2l2TkRNMysrbDBHMFk3RHdiVTM3dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBc245Qm1IU3B4WDBmb2RXUVZSY0hKSVUrT2xIN3JzWENaZVppblh4RjB1RmlTU0pvCkZEeGcyVXBwdzIxbE1jczZIV1RNN0ZuWjF3d0liS0FwaC8vMWFUWjF4bWt6VzJDU2FiYk8yMHVyRjcxY1JPSkMKS2htbXJ5emRIOE8yVGw2YU5LWUtmZXQvWUR0RXRKV3pQTEFwalhKRnFQTXVrWGE1NWVoQ3M1ZlM5a1MzRlFOUgozK0RjYlpPeFljaWVSSGJKYnNNVXloMGNSUDJjaHFNV3VEYjNsU2RSU0ZLRDVPZ0VEeTJIYkE4WDkzYlZDUDA3CkM4MVcrdlJrdTROUGV4VjhjWEpmMDJ3SElNVVdSVC9qTTkxVVJGOEV2a1VOeWR0U3VXM3g2Si90LzFsSDVXbnkKdXlPNXh2R1lvd0g4a1pBTnczYncwSUxtYmtIY2FjdWdjL05oMFFJREFRQUJBb0lCQVFDS3RJYlZvTHFZZzQzRQpKWC9lRDJIMmlDLytBOTB2UisrelhaNytRQ2JHSTJ4TDVwZTRPZDhNbTEycWhtVGZsOHdXTVZGb3pMMlI5WURLCllIOUZkcXBPMHdvY1gzMlFJWEJGQTlDazZwME9lcENyMnFLTnNwY3JneEpsNzZESUw0MW5JaXYvQTdSY3BGSFUKZm92a3VnUGdMWTlpSlc3bmpMb1NwVFRIK0Uvd0c5SExSRHhISUdGVlZLYU9uSE0rUFVCd2sxWm12bGVXcGFkQQpLdzYwQmxtS1dheXF3Wnd6ZjBFS1h0REZTV1FOY2w1TzIyT1VETHZsNi9ndGZsVFRtSXhPN2lXeHROQjQrR1cvCmYranFjR21UeitRc0drMGJpT0d3STRMaGN1c085Wk9Zd24rQ3VIRkJRT0g1ZjhnNDBvaUdMN0pOQ01QbUkrdngKVDRWQ2MwaU5Bb0dCQU92OEQrL0hCcGdGZ2lPd3JEZGNpQXdVUlYreXpLTHZrTysrMG9ESUtwVGUzV0x2aVZBWQpNR0laSmZFMFZyT0lVakhqRHVLS0RUMjdUR1VQY2xaRTlWUGVWMjRvekEwVWlUVncxRFo0bm8yRld2L1JybFN5CnU3TVNnV3hlK215bGtuSmxLNFR2ZGhRQlhuTUhCeFczOTFDS3lHQkIveTg0NFpmYzNlNFBTMkk3QW9HQkFNR2kKOTJxL0UxdjlHN3U3STY1NEdBR2RBYjhkTmtydWEwaHprdlozaTZ2a3prV0hqeGU4Qi9RSDBMQTRoaFVXUGZMUAowc3Z4OWs3VXdjVklrc0Q5OVpKb0V0S1UzSCtoa2lFcHpyN3pxMkFWSnhPRVd3bnBmc3VFRFU1c2pCOVZhNWcvClp4Uk1IUVdDUHI3bzZBN0R5VnlXYW1PRFMxc0FtSE95R3JxbkFkOWpBb0dCQU1iV3c4TGc2MkJxdThaQTFrdHIKajBMR1RkSWVBU21GUEpXV0x4N09DbnNYOG1pcnR3S2k3eG1wWVB3RmdzeVJuOWhqSHFhcGRoQys0ZGNCbGZDMAorQlhyOGJWamNOUFFxdkE1bXNZdkNrSHF6TXRqTFVZMnQ4dGlXMlVwL2s1UGtMOE5HZ2RRRWlrM0loTkFKNnNZCk1LNVAwaGl4WTBpeDMvd3E0V0QyeUNrREFvR0FEci9iR01aMU13eVVrRGd3LzVrbU92azZxTlFRenFSYWg2cEcKQjRBVG80UktNZ0doWksxdDdhaXF2TUdSZFFtOHJrSW1UR0toNEY5VVl6S2ordzlkSlVuSUpVSXhpWWRGR2tHVQovZmFSbDBBRk9mZGE5K1pSUWk5TTFDeHdmL0tCdjVjVXd2Y0pQdUlzNVYzWVQwZWFqdkxtSjY1WWp4WDhodE9LCk5hMkM5d0VDZ1lFQXJIN0gxUVk4TEllTlFmYXhoaWlVVXdtdHREN3FIK1U2aXZTYWZXV0Zib3M5d01ubW5nYmwKVGNmYi9lanZjYi9RN0UwcEZyd083NUxrS1dSRHlMVkpoTXdHdXVaNVpRUkZLS1VjWUtsZFRFcEpQd0F6cWtOQwp3bGhSU0FKY3J6ekZFbmhVT2x4TnJJWnZlWTM4dnVKYTBvK0NpUjdDaU1iMXVJcnlkamxXc2ZBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRZEozVVdMbHdZMXZIaUlXMjNPMW1XekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TVRFeU1qQXhORFF6T0ZvWApEVEkxTVRFeU1UQXhORFF6T0Zvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTEovUVpoMHFjVjlINkhWa0ZVWEJ5U0YKUGpwUis2N0Z3bVhtWXAxOFJkTGhZa2tpYUJROFlObEthY050WlRITE9oMWt6T3haMmRjTUNHeWdLWWYvOVdrMgpkY1pwTTF0Z2ttbTJ6dHRMcXhlOVhFVGlRaW9acHE4czNSL0R0azVlbWpTbUNuM3JmMkE3UkxTVnN6eXdLWTF5ClJhanpMcEYydWVYb1FyT1gwdlpFdHhVRFVkL2czRzJUc1dISW5rUjJ5VzdERk1vZEhFVDluSWFqRnJnMjk1VW4KVVVoU2crVG9CQTh0aDJ3UEYvZDIxUWo5T3d2TlZ2cjBaTHVEVDNzVmZIRnlYOU5zQnlERkZrVS80elBkVkVSZgpCTDVGRGNuYlVybHQ4ZWlmN2Y5WlIrVnA4cnNqdWNieG1LTUIvSkdRRGNOMjhOQ0M1bTVCM0duTG9IUHpZZEVDCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNQa2VkdGdyT0xPMG5tUjhDQgpKNjB2eDFYRXd6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFMb1BsWjNEbFZQeGx1Z0dvUnJFbXp5UitQL24rCkFKV2czdFdLOHExZWxCQ1lja3ZKMlJ5dHFXdmVqbjBxK1dHV3BROTRYVE9jbWFaQXE0dEtQVFhKT3F0dWMzd2QKeWFaWndxeXdsaTFUTHF1MkcvTENUS2Z1Rk5rZjZtaUJUSTBLY04xZ3BKeUV0ZlpxdktMWGIyNWVBTHYyVnVCSwphbFBIbDhvMDBNVHA3S2xVK29GUVpvUE04VmpYYU9NQkRUL2tmRlI5MTE1dVB3cGR3Uk8rL0hRU1NhVUdZTkMzCjIybWlMa0h3REhONzRCcCtkWmpVekRHeEdYb3JFMGdMNTNic0FWMTZ2akk5NG9meGhiNXZqamtraHlWOThnMDQKNGNjU0FUNVl6MnVMaWZOMVFVMjduL2ZpdHozU0orQW5sRUN5L2l2TkRNMysrbDBHMFk3RHdiVTM3dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRWmFmYW5CSE0rKzdldDZEWU5GbC9yakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TVRFeU1qQXhORFF6T0ZvWApEVEkxTVRFeU1UQXhORFF6T0Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtLMWNvOVoKZ1pLcjVrZ09jaGNFc1A2WGJyeW1jZ2ZaeWcvQVBQalEvSzVxM010Sm92SDUxK0c1cmRBRXIvaVZEaSt2ZytDMApVTkVuWUtaSHgxSkF2YzVZWmZpRGdybkloMkphclQzKyt1d244VitvWk1pRXBVd3I3eFVRM3pscVdVNndITXRFClcxTnBYVUszNTNvRDRIVnJDOGhCT1h5UzRqRHVCUTFDWmZ0RFNOL0JwbUJseUl2Tm8xMFpvYStzR3hKRGFKQmYKOGRuRElhdzV6cWV0aDFrQ1lhdE16UVJVK1dGRmdSQmVqWWc1Mm1NTlozL2t2NnB3aS9aM3VYUTFoZjFMYUs4NwpBMm1Bc2hmbVZOVWNrWWdQTGVMRUV2WThvTnNqaWw5Si9SQXA3WUZrSUxNRExkZVdRdWRyR1E3L3Zkd0pBeVdSCmdPN3NLOGFza2YxK3pFMENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXcKRkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVQpqNUhuYllLeml6dEo1a2ZBZ1NldEw4ZFZ4TU13S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWRib013OWxFdXFXeVVHV3oKZzgrQ0E5cVR4Q2wzdDVmZGpNT1QyTGxFbHhkc0FueUJkem45KzZ3eUhScFh3dGZmNnhHMDZQL1NTckIyVkRucQpmRUhrdUx0ZWFLN1lvVUlZYUx5Z3dUWm92SjVvSS8xVC9sVk11ZVM4NC82ZUU2S3ExSVpGbnZXVFYzbzRZcXBhCktCN1FxQzFJdVJjWUVVN3pDamd2ajNFRFNDbzVzeFdxSGo3SEhqV3NROWhhY1VBL21YUTVvdVN2NGVLSXR1Q0kKSmRjWGJpTG9DbkxxREE5Q2p4ZWlvNkNVUVljTnpuRTh0dWNBS014M2U1UWxoR3BKeUFnVUQ5NnVQUlF6c3g5VgpnbzFUOUtLN0tRN2d3cmtxRnFSOS9KTWtKQklrTTB1NzErSDhmcE5EcC9sWENxNFRjTVFpRUR4UHFPUTRUS3lrCkFiU3k5Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBb3JWeWoxbUJrcXZtU0E1eUZ3U3cvcGR1dktaeUI5bktEOEE4K05EOHJtcmN5MG1pCjhmblg0Ym10MEFTditKVU9MNitENExSUTBTZGdwa2ZIVWtDOXpsaGwrSU9DdWNpSFlscXRQZjc2N0NmeFg2aGsKeUlTbFRDdnZGUkRmT1dwWlRyQWN5MFJiVTJsZFFyZm5lZ1BnZFdzTHlFRTVmSkxpTU80RkRVSmwrME5JMzhHbQpZR1hJaTgyalhSbWhyNndiRWtOb2tGL3gyY01ockRuT3A2MkhXUUpocTB6TkJGVDVZVVdCRUY2TmlEbmFZdzFuCmYrUy9xbkNMOW5lNWREV0YvVXRvcnpzRGFZQ3lGK1pVMVJ5UmlBOHQ0c1FTOWp5ZzJ5T0tYMG45RUNudGdXUWcKc3dNdDE1WkM1MnNaRHYrOTNBa0RKWkdBN3V3cnhxeVIvWDdNVFFJREFRQUJBb0lCQUZjdGRPWU5oUGs3RlRWQwpXQ3F4SHN3cUF2RWRGVGZUbnduMWJEVzhjOFpZQjFqOGFVdlJHN1Fic2w4a1E4eWl3R2tZVjBhTUZra2FHaFM5Cm5MUWJjQmNoRWZHbk5PR3A2YS91K2FlZitIMlRvU1lwcVdZdWZBcGw5OEdIdXJLZW9wOGdpU3ozd1I3ZDgxUU8KQ1A0OUdZU1FDRTRSZEdXa3BZQ2w1eHNGbW5LVzdaMEhsTHRWUmY1TUdBaFdxWWR6c2NZY0JncTJHNmdVMHJqcQpDbFAyQ080V1lZMjdlaWozV0VhMTJ3VGxoQ0kzckhRQ0JyYjhyMElad0ZJdjlKREljTWJZSEZJSUVVbTVqNTBnCjNZZElGMlZ2R3NJb21DUytGNlNrRHFyNHAvSHVFaTF2eFRoa29TMWcyY2lqNTIxWHlZbEtUKzBHR29pb3hsN3MKd216MVFFRUNnWUVBMDBvZGVQL25hVVN2YzBSSVhhZWYydlJSKzNrYlFyYVJwVDZDWVROaEEyZFE2QUtWZERreApoV2YwamtMTlNkZ0VzaTh6enh5alJuS1J1OGNBdS9nVlRkUUw5SWY5dnhzN0x6Z1lsck5NY3lSNXdsMnRUR0M4CmNjbTEwOEJjTWpFMVhCZU95VDI3L2t0OVNKZys0dDZyM094V1ZjUFhWSGpKQXkyMlBEcjZLMFVDZ1lFQXhTT2oKUXFpY2t4S3JUUmgyWWdKaHFGQ1ZxcEx0Nk5HZmpZRkRvVkcxdlpVTTFBdmNLalFucitNYnR3UGRES0hSU1UzTgpBYXVZekR5Mzc5N2J6RnNYcGg5TUR0QlJsVTRlbVdIa2Y3MFROMFNOTGlkTEtkQWs0NC9aUkxoellLd3kwRmxUCjlYeVZrNlYwTUVOU0VFeE14WEZ4Qmo1aDZ1bjVkcm1oVlFEeEtXa0NnWUF4WW9OZEFzTTk4WlhvcFM4YzVNOFMKU0VUWk9FZE00b3RNU2o0REpoVW96SDgybTFQL1pGYlV6YVYxa3R1VXhPN2tEdkJYR21SM1ZOUUhSYzVBSVE0cApzTVJTbFc2VHVuT3M1N21uajZUd3pMZkEzRkJqSjhFai8zZUdWTkczMFpTZFA4eFo4Um45cC90U2VuTklaNjlYCjVjMlFJa1EwTkQ4WGhSbXhIai9XMlFLQmdRQ2hSdkYyUkJpcjNWY1U0RkZoQncrN3NnbHZIWHJTd0VObWNYelIKaWRaRHZaOWNEa1BVcHd4Y3dWQllIaW9GL3BBSUIwVVMrNzRxUC9ZK243UnpiNFplV2paUDNDOFNGWEhGQzZmeQp0TXoycHZkVTdjSjQ5NVptTUxXUG1kS1NJTzRGTXo4VGt4T1BVWWxIUHB2eFIycDdFTDVsWEQyaEFEOGMyT3BhCmIwWGNHUUtCZ1FERWZ4Mm1ITDBBZ2kyWDZHMnFEZVVkbndwVlp1bW5saFllRUQ2QitxUW1LbVpnZkhISmpoL2MKajZNalFaOFpLSzhkR0QrTWMxRTUvazhSRllrU2lzS2FWeVd4UW1obnBUUlNNL1ZLanc2YUk3YjVBSmQ2K0FKSAplWS9SOC9vNTdQYTdkaEwzL2ZQOTYwTjRBd3lCT1hlSkdxTXFJNm9NV0F6ZXVYL2FyYnFrdWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: ""

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: vxlan
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement:  "disabled"
  enable-host-reachable-services: "true"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  annotate-k8s-node: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  # To annotate the k8s node with Cilium's metadata
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumnodes
  - ciliumnodes/status
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.6@sha256:f7f93c26739b6641a3fa3d76b1e1605b15989f25d06625260099e01c8243f54c"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.6@sha256:f7f93c26739b6641a3fa3d76b1e1605b15989f25d06625260099e01c8243f54c"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: wait-for-node-init
        image: "quay.io/cilium/cilium:v1.11.6@sha256:f7f93c26739b6641a3fa3d76b1e1605b15989f25d06625260099e01c8243f54c"
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          until test -s "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"; do
            echo "Waiting on node-init to run...";
            sleep 1;
          done
        volumeMounts:
        - name: cilium-bootstrap-file-dir
          mountPath: "/tmp/cilium-bootstrap.d"
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.6@sha256:f7f93c26739b6641a3fa3d76b1e1605b15989f25d06625260099e01c8243f54c"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
      - name: cilium-bootstrap-file-dir
        hostPath:
          path: "/tmp/cilium-bootstrap.d"
          type: DirectoryOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-nodeinit/daemonset.yaml
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: cilium-node-init
  namespace: kube-system
  labels:
    app: cilium-node-init
spec:
  selector:
    matchLabels:
      app: cilium-node-init
  template:
    metadata:
      annotations:
      labels:
        app: cilium-node-init
    spec:
      tolerations:
        - operator: Exists
      hostPID: true
      hostNetwork: true
      priorityClassName: system-node-critical
      volumes:
      # To access iptables concurrently with other processes (e.g. kube-proxy)
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      containers:
        - name: node-init
          image: "quay.io/cilium/startup-script:62bfbe88c17778aad7bef9fa57ff9e2d4a9ba0d8"
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: true
          volumeMounts:
            # To access iptables concurrently with other processes (e.g. kube-proxy)
            - mountPath: /run/xtables.lock
              name: xtables-lock
          lifecycle:
          env:
          # STARTUP_SCRIPT is the script run on node bootstrap. Node
          # bootstrapping can be customized in this script. This script is invoked
          # using nsenter, so it runs in the host's network and mount namespace using
          # the host's userland tools!
          - name: STARTUP_SCRIPT
            value: |
              #!/bin/bash
              
              set -o errexit
              set -o pipefail
              set -o nounset
              
              echo "Link information:"
              ip link
              
              echo "Routing table:"
              ip route
              
              echo "Addressing:"
              ip -4 a
              ip -6 a
              mkdir -p "/tmp/cilium-bootstrap.d"
              date > "/tmp/cilium-bootstrap.d/cilium-bootstrap-time"
              echo "Node initialization complete"
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.6@sha256:9f6063c7bcaede801a39315ec7c166309f6a6783e98665f6693939cf1701bc17
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
